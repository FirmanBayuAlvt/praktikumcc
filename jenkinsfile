pipeline {
    agent any

    environment {
        DOCKER_IMAGE = 'my-docker-image:latest'
        DOCKERHUB_USER = 'dockerhub-username'
        DOCKERHUB_CRED = 'dockerhub-creds'
        ANSIBLE_SERVER = 'user@ansible-server'
        K8S_SERVER = 'user@k8s-server'
    }

    stages {
        stage('Checkout Kode Sumber') {
            steps {
                echo 'Mengambil kode sumber dari Git...'
                git branch: 'main', url: 'https://github.com/FirmanBayuAlvt/praktikumcc.git'
            }
        }

        stage('Mengirim File ke Server Ansible') {
            steps {
                echo 'Mengirim file ke server Ansible...'
                bat '''
                    echo "Mulai SCP ke server Ansible"
                    scp -o StrictHostKeyChecking=no Dockerfile %ANSIBLE_SERVER%:/home/user/Dockerfile
                    echo "SCP selesai dengan exit code: %ERRORLEVEL%"
                    if %ERRORLEVEL% NEQ 0 exit /b %ERRORLEVEL%
                '''
            }
        }

        stage('Build Image Docker') {
            steps {
                echo 'Membangun image Docker...'
                bat '''
                    echo "Membangun Docker image..."
                    docker build -t %DOCKERHUB_USER%/%DOCKER_IMAGE% .
                    echo "Build selesai dengan exit code: %ERRORLEVEL%"
                    if %ERRORLEVEL% NEQ 0 exit /b %ERRORLEVEL%
                '''
            }
        }

        stage('Push ke DockerHub') {
            steps {
                echo 'Push image Docker ke DockerHub...'
                withCredentials([string(credentialsId: "%DOCKERHUB_CRED%", variable: 'DOCKERHUB_PASS')]) {
                    bat '''
                        echo "Login ke DockerHub..."
                        docker login -u %DOCKERHUB_USER% -p %DOCKERHUB_PASS%
                        docker push %DOCKERHUB_USER%/%DOCKER_IMAGE%
                        echo "Push selesai dengan exit code: %ERRORLEVEL%"
                        if %ERRORLEVEL% NEQ 0 exit /b %ERRORLEVEL%
                    '''
                }
            }
        }

        stage('Copy File ke Server Kubernetes') {
            steps {
                echo 'Mengirim file konfigurasi Kubernetes...'
                bat '''
                    echo "Mengirim file konfigurasi ke server Kubernetes..."
                    scp -o StrictHostKeyChecking=no k8s-config.yaml %K8S_SERVER%:/home/user/k8s-config.yaml
                    echo "SCP ke server Kubernetes selesai dengan exit code: %ERRORLEVEL%"
                    if %ERRORLEVEL% NEQ 0 exit /b %ERRORLEVEL%
                '''
            }
        }

        stage('Deployment Menggunakan Ansible') {
            steps {
                echo 'Melakukan deployment ke Kubernetes menggunakan Ansible...'
                bat '''
                    echo "Melakukan SSH ke server Ansible dan menjalankan playbook..."
                    ssh -o StrictHostKeyChecking=no %ANSIBLE_SERVER% "ansible-playbook -i /home/user/inventory /home/user/k8s-deployment.yaml"
                    echo "Deployment selesai dengan exit code: %ERRORLEVEL%"
                    if %ERRORLEVEL% NEQ 0 exit /b %ERRORLEVEL%
                '''
            }
        }

        stage('Run Background Task') {
            steps {
                echo 'Running background task...'
                bat '''
                    start /B echo "Task berjalan di background"
                    echo "Perintah latar belakang selesai dengan exit code: %ERRORLEVEL%"
                    if %ERRORLEVEL% NEQ 0 exit /b %ERRORLEVEL%
                '''
            }
        }
    }

    post {
        success {
            echo 'Pipeline berhasil dijalankan!'
        }
        failure {
            echo 'Pipeline gagal, periksa log untuk detail kesalahan!'
        }
    }
}
